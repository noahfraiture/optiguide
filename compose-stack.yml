services:
  website:
    image: noahfraiture/optiguide:prod
    labels :
      - "traefik.enable=true"
      - "traefik.http.routers.optiguide.rule=Host(`optiguide.dev`)"
      - "traefik.http.routers.optiguide.entrypoints=websecure"
      - "traefik.http.routers.optiguide.tls.certresolver=myresolver"
    environment:
      - GOOGLE_CALLBACK_URL=https://optiguide.dev/auth/google/callback
      - GOOGLE_ID_FILE=/run/secrets/google-id
      - GOOGLE_SECRET_FILE=/run/secrets/google-secret
      - SESSION_SECRET_FILE=/run/secrets/session-secret
      - POSTGRES_USER=optiguide
      - POSTGRES_PASSWORD_FILE=/run/secrets/optiguide-postgres-password
      - POSTGRES_DB=optiguide
      - POSTGRES_HOST=optiguide_postgres
    secrets:
      - optiguide-postgres-password
      - google-id
      - google-secret
      - session-secret
    deploy:
      update_config:
        order: start-first
    depends_on:
      - optiguide_postgres
    networks:
      - traefik

  optiguide_postgres:
    image: postgres:17-alpine3.20
    environment:
      - POSTGRES_USER=optiguide
      - POSTGRES_PASSWORD_FILE=/run/secrets/optiguide-postgres-password
      - POSTGRES_DB=optiguide
    secrets:
      - optiguide-postgres-password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U optiguide"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik

  prometheus:
    image: prom/prometheus:v3.0.1
    volumes:
      - prometheus_etc:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    deploy:
      update_config:
        order: start-first
    networks:
      - traefik

  grafana:
    image: grafana/grafana:11.4.0
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_provisioning:/etc/grafana/provisioning/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana.rule=Host(`dashboard.optiguide.dev`)"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    deploy:
      update_config:
        order: start-first
    networks:
      - traefik

volumes:
  postgres_data:
  prometheus_data:
  prometheus_etc:
  grafana_data:
  grafana_provisioning:

networks:
  traefik:
    external: true
secrets:
  optiguide-postgres-password:
    external: true
  google-id:
    external: true
  google-secret:
    external: true
  session-secret:
    external: true
